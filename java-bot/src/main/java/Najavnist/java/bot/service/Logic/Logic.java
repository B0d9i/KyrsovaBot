package Najavnist.java.bot.service.Logic;

import Najavnist.java.bot.Buttons.ReplyKeyboardMarkupOll;

import Najavnist.java.bot.DataBase.Person;
import Najavnist.java.bot.DataBase.PersonDB;
import Najavnist.java.bot.service.JavaBot;
import org.joda.time.DateTime;
import org.springframework.context.annotation.PropertySource;
import org.springframework.transaction.annotation.EnableTransactionManagement;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Chat;
import org.telegram.telegrambots.meta.api.objects.Contact;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardMarkup;

public class Logic {

    SendMessage sendMessage = new SendMessage();
    public boolean checkSurname = false;//–≤ –±–¥
    public boolean checkNumber  = false;//–≤ –±–¥
    public SendMessage logica(Update update, ReplyKeyboardMarkupOll replyKeyboardMarkupOll, Person person, PersonDB personDBz){
        //System.out.println(update.getMessage());//–≤—Å—è —ñ–Ω—Ñ–∞
        Message message = update.getMessage();//–ø—Ä–æ—Å—Ç–æ —Å–∫–æ—Ä–æ—Ç–∏–≤
        Chat messageChat = message.getChat();//—Ç–æ–∂–µ —Å–∫–æ—Ä–æ—Ç–∏–≤. –º–æ–∂–Ω–∞ –∑–∞–º—ñ—Å—Ç—å message -> update.getMessage()
        String text = message.getText();

        //sendMessage.setText("–ø—Ä–∏–π–Ω—è–≤ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: "+message.getText());//–≤–∏–≤—ñ–¥ –≤ —á–∞—Ç(—Ç–µ–∫—Å—Ç —è–∫–∏–π –ø—Ä–∏–Ω—è–≤)
        sendMessage.setChatId(String.valueOf(message.getChatId()));//—ñ–¥ —á–∞—Ç
        Contact contact = update.getMessage().getContact();// –û—Ç—Ä–∏–º–∞–π—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞


        if (message.getForwardFrom() != null){
            text = "–†–æ–∑—Ä–æ–±–Ω–∏–∫ —Ä–æ–∑—É–º–Ω—ñ—à–∏–π, —ñ –ø—Ä–æ–¥—É–º–∞–≤ —Ü–µ üòã";
            sendMessage.setText(text);
        }else {

        if (message.hasLocation()) {
            String longitude= String.valueOf(message.getLocation().getLongitude());
            String latitude= String.valueOf(message.getLocation().getLatitude());

            DateTime dateTimeNow = DateTime.now();
            // –§–æ—Ä–º—É–≤–∞–Ω–Ω—è —Ä—è–¥–∫–∞ –∑ –¥–∞—Ç–∏ —Ç–∞ —á–∞—Å—É –≤ —Ñ–æ—Ä–º–∞—Ç—ñ ISO 8601
            String dateTimeAsString = dateTimeNow.toString();
            // –§–æ—Ä–º—É–≤–∞–Ω–Ω—è —Ä—è–¥–∫–∞ –∑ –¥–∞—Ç–∏ —Ç–∞ —á–∞—Å—É –≤ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ
            String dateTimeFormatted = dateTimeNow.toString("dd-MM-yyyy HH:mm:ss");

            String url = "https://www.google.com/maps/?q=" + latitude + "," + longitude + "&z=15";
            //text = "–õ–æ–∫–∞—Ü—ñ—é –æ—Ç—Ä–∏–º–∞–Ω–æ "+message.getLocation();
            text = "–õ–æ–∫–∞—Ü—ñ—é –æ—Ç—Ä–∏–º–∞–Ω–æ \n"+url+"\n–î–∞—Ç–∞ —Ç–∞ —á–∞—Å: "+dateTimeFormatted;
            text = text + "\n–í–∏–±–µ—Ä—ñ—Ç—å –ø—É–Ω–∫—Ç –∑ –Ω–∞—è–≤–Ω–∏—Ö";
            sendMessage.enableMarkdown(true);//–∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é(–ó–º—ñ–Ω–∞ –ø—Ä—ñ–∑–≤–∏—â–∞,–í–∫–∞–∑–∞—Ç–∏ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å)
            ReplyKeyboardMarkup keyboardMarkup = replyKeyboardMarkupOll.getMenuKeyboardMenu();
            sendMessage.setReplyMarkup(keyboardMarkup);

            sendMessage.setText(text);
        }//}else if (checkNumber == true) {
        else if (message.hasContact()) {
            //if –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –º—ñ—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç,–ø—Ä–∏—Å–≤–æ—ó—Ç–∏ –∑–º—ñ–Ω–Ω—ñ–π —Ç–∞ –∑–∞–ø–∏—Å–∞—Ç–∏ –≤ –±–¥
            //message.getText();
            checkNumber = false;
            text = "–ù–æ–º–µ—Ä –æ—Ç—Ä–∏–º–∞–Ω–æ " + contact.getPhoneNumber();
            text = text + "\n–í–∏–±–µ—Ä—ñ—Ç—å –ø—É–Ω–∫—Ç –∑ –Ω–∞—è–≤–Ω–∏—Ö";

            sendMessage.setText(text);

            sendMessage.enableMarkdown(true);//–∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é(–ó–º—ñ–Ω–∞ –ø—Ä—ñ–∑–≤–∏—â–∞,–í–∫–∞–∑–∞—Ç–∏ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å)
            ReplyKeyboardMarkup keyboardMarkup = replyKeyboardMarkupOll.getMenuKeyboardMenu();
            sendMessage.setReplyMarkup(keyboardMarkup);
            sendMessage.setText(text);
            //–µ–ª—Å–µ —Å–æ—É—Ç(–ø–æ–º–∏–ª–∫–∞ –Ω–æ–º–µ—Ä—É)
        }else if (update.getMessage().getText().equals("/start")) {
            text = "–ü—Ä–∏–≤—ñ—Ç, —è –±–æ—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –Ω–∞ –ù–¢–ü \n–£–≤–µ–¥–∏ —Å–≤–æ—î –ø—Ä—ñ–∑–≤–∏—â–µ —Ç–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª–∏ (–ö–æ–≤–∞–ª—å –Ü.–û.)";

            //personDB.saveCheckSurname(person,update);//–∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≤ –±–¥
            sendMessage.setText(text);
        }//}else if (checkSurname==true){
        else if (message.getText().equals("t1")) {//—è–∫—â–æ checkSurname==true (—É–≤–µ–¥–µ–Ω—ñ –¥–∞–Ω—ñ –∑–∞–ø–∏—Å—É—î —è–∫ –ø—Ä—ñ–∑–≤–∏—â–µ)

            //if (–≤ –±–¥ —î –¥–∞–Ω—ñ){//—è–∫—â–æ —î –¥–∞–Ω—ñ –æ–±–Ω–æ–≤–∏—Ç–∏
            if (update.getMessage().getText().equals("t2")) {//–ø—Ä–æ—Å—Ç–æ –ø—Ä–∏–∫–ª–∞–¥. —É–¥–∞–ª–∏
            // –æ–±–Ω–æ–≤–∏—Ç–∏ –¥–∞–Ω—ñ—å–º—Ç
            checkSurname = false;
            text ="–ü—Ä—ñ–∑–≤–∏—â–µ –æ–Ω–æ–≤–ª–µ–Ω–æ";
            text =text+"\n–í–∏–±–µ—Ä—ñ—Ç—å –ø—É–Ω–∫—Ç –∑ –Ω–∞—è–≤–Ω–∏—Ö";
            sendMessage.enableMarkdown(true);//–∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é(–ó–º—ñ–Ω–∞ –ø—Ä—ñ–∑–≤–∏—â–∞,–í–∫–∞–∑–∞—Ç–∏ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å)
            ReplyKeyboardMarkup keyboardMarkup = replyKeyboardMarkupOll.getMenuKeyboardMenu();
            sendMessage.setReplyMarkup(keyboardMarkup);
            sendMessage.setText(text);
            }
            //}else{//—è–∫—â–æ –Ω–µ–º–∞ –≤ –±–¥. –∑–∞–ø–∏—Å–∞—Ç–∏
            //message.getText();//–∑–∞–ø–∏—Å–∞—Ç–∏ –ø—Ä—ñ–∑–≤–∏—â–µ –≤ –ë–î
            else if (update.getMessage().getText().equals("t1")) {

            checkSurname = false;
            text ="–ü—Ä—ñ–∑–≤–∏—â–µ –æ—Ç—Ä–∏–º–∞–Ω–æ";
            text =text+"\n–ù–∞–¥–∞–π—Ç–µ –¥–æ—Å—Ç—É–ø –¥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É";

            sendMessage.enableMarkdown(true);//–∫–Ω–æ–ø–∫–∏ –∑ –∫–æ–Ω—Ç–∞–∫—Ç–æ–º(–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—å –∫–æ–Ω—Ç–∞–∫—Ç–æ–º)
            ReplyKeyboardMarkup keyboardMarkup = replyKeyboardMarkupOll.getMenuKeyboardPhone();
            sendMessage.setReplyMarkup(keyboardMarkup);

            sendMessage.setText(text);
            checkNumber = true;}
        }else {
//            if (update.getMessage().getText().equals("/t")) {
//                text = ")";
//                //checkSurname=true;
//                //checkNumber
//                sendMessage.setText(text);
//            }
            if (update.getMessage().getText().equals("–ó–º—ñ–Ω–∏—Ç–∏ –ø—Ä—ñ–∑–≤–∏—â–µ")) {
                text = "–í–≤–µ–¥–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–µ –ø—Ä—ñ–∑–≤–∏—â–µ";
                checkSurname = true;
                sendMessage.setText(text);

            } else if (update.getMessage().getText().equals("–í–∫–∞–∑–∞—Ç–∏ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å")) {
                text = "–í–∏–±–µ—Ä—ñ—Ç—å –ø—É–Ω–∫—Ç –∑ –Ω–∞—è–≤–Ω–∏—Ö";
                //–∫–Ω–æ–ø–∫–∏ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ(–Ω–∞—è–≤–Ω–∏–π, –∑–∞ –º–µ–∂–∞–º–∏, –≤—ñ–¥–ø—É—Å—Ç–∫–∞, –∑–≤—ñ–ª—å–Ω–µ–Ω–Ω—è)
                sendMessage.enableMarkdown(true);//–∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é(–ó–º—ñ–Ω–∞ –ø—Ä—ñ–∑–≤–∏—â–∞,–í–∫–∞–∑–∞—Ç–∏ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å)
                ReplyKeyboardMarkup keyboardMarkup = replyKeyboardMarkupOll.getMenuKeyboardPresence();
                sendMessage.setReplyMarkup(keyboardMarkup);
                sendMessage.setText(text);
            } else if (update.getMessage().getText().equals("–ù–∞—è–≤–Ω–∏–π")) {
                text = "–î–∞–π –¥–æ—Å—Ç—É–ø –¥–æ –ª–æ–∫–∞—Ü—ñ—ó";
                //if (—î –≤ –±–¥){
                //–æ–Ω–æ–≤–∏—Ç–∏ –¥–∞–Ω—ñ (–Ω–∞—è–≤–Ω–æ—Å—Ç—ñ,–ª–æ–∫–∞—Ü—ñ—è,–¥–∞—Ç–∞,—á–∞—Å)
                // text="\n–î–∞–Ω—ñ –æ–Ω–æ–≤–ª–µ–Ω–æ"+text;

                // }else {
                // –≤–≤–µ—Å—Ç–∏ –¥–∞–Ω—ñ
                //text="\n–î–∞–Ω—ñ –¥–æ–¥–∞–Ω–æ"+text;
                // }
                sendMessage.enableMarkdown(true);//–∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é(–ó–º—ñ–Ω–∞ –ø—Ä—ñ–∑–≤–∏—â–∞,–í–∫–∞–∑–∞—Ç–∏ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å)
                ReplyKeyboardMarkup keyboardMarkup = replyKeyboardMarkupOll.getMenuKeyboardLocation();
                sendMessage.setReplyMarkup(keyboardMarkup);
                sendMessage.setText(text);
                //–ø–æ—Ç—ñ–º –¥–æ—Ä–æ–±–∏ —à–µ –æ–¥–∏–Ω —ñ—Ñ
//                sendMessage.enableMarkdown(true);//–∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é(–ó–º—ñ–Ω–∞ –ø—Ä—ñ–∑–≤–∏—â–∞,–í–∫–∞–∑–∞—Ç–∏ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å)
//                ReplyKeyboardMarkup keyboardMarkup = replyKeyboardMarkupOll.getMenuKeyboardMenu();
//                sendMessage.setReplyMarkup(keyboardMarkup);
//                sendMessage.setText(text);

            } else if (update.getMessage().getText().equals("–ó–∞ –º–µ–∂–∞–º–∏")) {
                text = "–î–∞–π –¥–æ—Å—Ç—É–ø –¥–æ –ª–æ–∫–∞—Ü—ñ—ó";
                //if (—î –≤ –±–¥){
                //–æ–Ω–æ–≤–∏—Ç–∏ –¥–∞–Ω—ñ (–Ω–∞—è–≤–Ω–æ—Å—Ç—ñ,–ª–æ–∫–∞—Ü—ñ—è,–¥–∞—Ç–∞,—á–∞—Å)
                // text="\n–î–∞–Ω—ñ –æ–Ω–æ–≤–ª–µ–Ω–æ"+text;

                // }else {
                // –≤–≤–µ—Å—Ç–∏ –¥–∞–Ω—ñ
                //text="\n–î–∞–Ω—ñ –¥–æ–¥–∞–Ω–æ"+text;
                // }
                sendMessage.enableMarkdown(true);//–∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é(–ó–º—ñ–Ω–∞ –ø—Ä—ñ–∑–≤–∏—â–∞,–í–∫–∞–∑–∞—Ç–∏ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å)
                ReplyKeyboardMarkup keyboardMarkup = replyKeyboardMarkupOll.getMenuKeyboardLocation();
                sendMessage.setReplyMarkup(keyboardMarkup);
                sendMessage.setText(text);

                //–ø–æ—Ç—ñ–º –¥–æ—Ä–æ–±–∏ —à–µ –æ–¥–∏–Ω —ñ—Ñ
//                sendMessage.enableMarkdown(true);//–∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é(–ó–º—ñ–Ω–∞ –ø—Ä—ñ–∑–≤–∏—â–∞,–í–∫–∞–∑–∞—Ç–∏ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å)
//                ReplyKeyboardMarkup keyboardMarkup = replyKeyboardMarkupOll.getMenuKeyboardMenu();
//                sendMessage.setReplyMarkup(keyboardMarkup);
//                sendMessage.setText(text);
            } else if (update.getMessage().getText().equals("–í—ñ–¥–ø—É—Å—Ç–∫–∞")) {
                text = "–î–∞–π –¥–æ—Å—Ç—É–ø –¥–æ –ª–æ–∫–∞—Ü—ñ—ó";
                //if (—î –≤ –±–¥){
                //–æ–Ω–æ–≤–∏—Ç–∏ –¥–∞–Ω—ñ (–Ω–∞—è–≤–Ω–æ—Å—Ç—ñ,–ª–æ–∫–∞—Ü—ñ—è,–¥–∞—Ç–∞,—á–∞—Å)
                // text="\n–î–∞–Ω—ñ –æ–Ω–æ–≤–ª–µ–Ω–æ"+text;

                // }else {
                // –≤–≤–µ—Å—Ç–∏ –¥–∞–Ω—ñ
                //text="\n–î–∞–Ω—ñ –¥–æ–¥–∞–Ω–æ"+text;
                // }
                sendMessage.enableMarkdown(true);//–∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é(–ó–º—ñ–Ω–∞ –ø—Ä—ñ–∑–≤–∏—â–∞,–í–∫–∞–∑–∞—Ç–∏ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å)
                ReplyKeyboardMarkup keyboardMarkup = replyKeyboardMarkupOll.getMenuKeyboardLocation();
                sendMessage.setReplyMarkup(keyboardMarkup);
                sendMessage.setText(text);

                //–ø–æ—Ç—ñ–º –¥–æ—Ä–æ–±–∏ —à–µ –æ–¥–∏–Ω —ñ—Ñ
//                sendMessage.enableMarkdown(true);//–∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é(–ó–º—ñ–Ω–∞ –ø—Ä—ñ–∑–≤–∏—â–∞,–í–∫–∞–∑–∞—Ç–∏ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å)
//                ReplyKeyboardMarkup keyboardMarkup = replyKeyboardMarkupOll.getMenuKeyboardMenu();
//                sendMessage.setReplyMarkup(keyboardMarkup);
//                sendMessage.setText(text);

            } else if (update.getMessage().getText().equals("–ó–≤—ñ–ª—å–Ω–µ–Ω–Ω—è")) {
                text = "–î–∞–π –¥–æ—Å—Ç—É–ø –¥–æ –ª–æ–∫–∞—Ü—ñ—ó";
                //if (—î –≤ –±–¥){
                //–æ–Ω–æ–≤–∏—Ç–∏ –¥–∞–Ω—ñ (–Ω–∞—è–≤–Ω–æ—Å—Ç—ñ,–ª–æ–∫–∞—Ü—ñ—è,–¥–∞—Ç–∞,—á–∞—Å)
                // text="\n–î–∞–Ω—ñ –æ–Ω–æ–≤–ª–µ–Ω–æ"+text;

                // }else {
                // –≤–≤–µ—Å—Ç–∏ –¥–∞–Ω—ñ
                //text="\n–î–∞–Ω—ñ –¥–æ–¥–∞–Ω–æ"+text;
                // }
                sendMessage.enableMarkdown(true);//–∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é(–ó–º—ñ–Ω–∞ –ø—Ä—ñ–∑–≤–∏—â–∞,–í–∫–∞–∑–∞—Ç–∏ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å)
                ReplyKeyboardMarkup keyboardMarkup = replyKeyboardMarkupOll.getMenuKeyboardLocation();
                sendMessage.setReplyMarkup(keyboardMarkup);
                sendMessage.setText(text);

                //–ø–æ—Ç—ñ–º –¥–æ—Ä–æ–±–∏ —à–µ –æ–¥–∏–Ω —ñ—Ñ
//                sendMessage.enableMarkdown(true);//–∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é(–ó–º—ñ–Ω–∞ –ø—Ä—ñ–∑–≤–∏—â–∞,–í–∫–∞–∑–∞—Ç–∏ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å)
//                ReplyKeyboardMarkup keyboardMarkup = replyKeyboardMarkupOll.getMenuKeyboardMenu();
//                sendMessage.setReplyMarkup(keyboardMarkup);
//                sendMessage.setText(text);
            } else if (message.getText().equals("–¥–∞–º")) {//

            } else sendMessage.setText("—è –Ω–µ —Ä–æ–∑—É–º—ñ—é");

        }
        }return sendMessage;
}



}



