package Najavnist.java.bot.service;

import Najavnist.java.bot.Buttons.ReplyKeyboardMarkupOll;

import Najavnist.java.bot.service.Logic.Console;
import org.joda.time.DateTime;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.PropertySource;
import org.springframework.core.env.Environment;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Contact;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardMarkup;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

@PropertySource("tocen.properties")//–¥–æ–¥–∞—î–º —Ñ–∞–π–ª –∑ resources —â–æ–± —Å—Ç–≤–æ—Ä–∏—Ç–∏ private final tocen
//—Ç–æ–∫–µ–Ω –±–µ–∑–ø–µ—á–Ω–æ –∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è –≤ –ø–∞–ø—Ü—ñ —Ä–µ—Å—É—Ä—Å—ñ–≤ (git —ñ–≥–Ω–æ—Ä—É—î –ø–∞–ø–∫—É —ñ —Ç–æ–∫–µ–Ω –Ω–µ –ø—É—à–∏—Ç—å)

@Component//–≤–∫–∞–∂–∏ —Ü—é –∞–Ω–æ—Ç–∞—Ü—ñ—é —â–æ–± 0 –Ω–µ –±—É–ª–æ +–≤–µ—Ä—Å—ñ—è spring-boot-starter-parent –≤ POM
public class JavaBot extends TelegramLongPollingBot {
private final Environment tocen;//–±–µ—Ä–µ –¥–∞–Ω—ñ –∑ resources (–Ω–µ –∑–∞–±—É–¥—å @PropertySource)

    boolean checkSurname = false;//–¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏. —Ç–µ–∫—Å—Ç —Ä–∞–Ω–¥–æ–º–Ω–∏–π —á–∏ –ø—Ä—ñ–∑–≤–∏—â–µ
    boolean checkNumber  = false;
    boolean checkReplacement =false;//–ø–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ –º—ñ–Ω—è–ª–æ—Å—å –ø—Ä—ñ–∑–≤–∏—â–µ
    // (—â–æ–± –∫–æ–ª–∏ –ø—Ä—ñ–∑–≤–∏—â–µ –º—ñ–Ω—è–ª–æ—Å—å –Ω–µ –∑–∞–ø–∏—Ç—É–≤–∞–≤ –Ω–æ–º–µ—Ä —Ç–æ–ª–µ—Ñ–æ–Ω—É)
    @Autowired
    public JavaBot(Environment tocen) {
        this.tocen=tocen;
    }
    @Override
    public String getBotUsername() {return tocen.getRequiredProperty("BotUsername");}//privat final tocen —è–∫–∏–π –±–µ—Ä–µ –¥–∞–Ω—ñ –∑ resourses

    @Override
    public String getBotToken() {
        return tocen.getRequiredProperty("BotToken");
    }


    @Override
    public void onUpdateReceived(Update update) {
    //System.out.println(update.getMessage());//–≤—Å—è —ñ–Ω—Ñ–∞
    new Console().output(update);//–≤–∏–≤—ñ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å —â–æ –æ—Ç—Ä–∏–º–∞–≤ –≤—ñ–¥ –±–æ—Ç–∞

        ReplyKeyboardMarkupOll replyKeyboardMarkupOll=new ReplyKeyboardMarkupOll();
        SendMessage sendMessage = new SendMessage();

            //System.out.println(update.getMessage());//–≤—Å—è —ñ–Ω—Ñ–∞
            Message message = update.getMessage();//–ø—Ä–æ—Å—Ç–æ —Å–∫–æ—Ä–æ—Ç–∏–≤
            //Chat messageChat = message.getChat();//—Ç–æ–∂–µ —Å–∫–æ—Ä–æ—Ç–∏–≤. –º–æ–∂–Ω–∞ –∑–∞–º—ñ—Å—Ç—å message -> update.getMessage()
            String text = message.getText();

            sendMessage.setChatId(String.valueOf(message.getChatId()));//—ñ–¥ —á–∞—Ç
            Contact contact = update.getMessage().getContact();// –û—Ç—Ä–∏–º–∞–π—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞


            if (message.getForwardFrom() != null){//—è–∫—à–æ –ø–µ—Ä–µ—Å–ª–∞–≤ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (—â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ —Ñ–∞–ª—å—Å–∏—Ñ—ñ–∫–∞—Ü—ñ—ó –≥–µ–æ –¥–∞–Ω–∏—Ö,–∞–±–æ –∫–æ–Ω—Ç–∞–∫—Ç —Ç–µ–ª–µ—Ñ–æ–Ω—É)
                text = "–ù–µ —Ä–æ–±–∏ —Ç–∞–∫, –±–æ —Ä–æ–∑–∫–∞–∂—É –æ—Ñ—ñ—Ü–µ—Ä–æ–≤—ñüò†";
                sendMessage.setText(text);

                if (checkReplacement == false) {
                    sendMessage.enableMarkdown(true);//–∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é(–ó–º—ñ–Ω–∞ –ø—Ä—ñ–∑–≤–∏—â–∞,–í–∫–∞–∑–∞—Ç–∏ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å)
                    ReplyKeyboardMarkup keyboardMarkup = replyKeyboardMarkupOll.getMenuKeyboardMenu();
                    sendMessage.setReplyMarkup(keyboardMarkup);
                }else {
                    sendMessage.enableMarkdown(true);//–∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é(–í–∫–∞–∑–∞—Ç–∏ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å)
                    ReplyKeyboardMarkup keyboardMarkup = replyKeyboardMarkupOll.getMenuKeyboardMenu2();
                    sendMessage.setReplyMarkup(keyboardMarkup);
                }
            }else {//—è–∫—â–æ –Ω–µ –ø–µ—Ä–µ—Å–ª–∞–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è

                if (message.hasLocation()) {//–ª–æ–∫–∞—Ü—ñ—è, –¥–∞—Ç–∞
                    String longitude = String.valueOf(message.getLocation().getLongitude());//–î–æ–≤–≥–æ—Ç–∞
                    String latitude = String.valueOf(message.getLocation().getLatitude());  //–®–∏—Ä–æ—Ç–∞

                    DateTime dateTimeNow = DateTime.now();
                    // –§–æ—Ä–º—É–≤–∞–Ω–Ω—è —Ä—è–¥–∫–∞ –∑ –¥–∞—Ç–∏ —Ç–∞ —á–∞—Å—É –≤ —Ñ–æ—Ä–º–∞—Ç—ñ ISO 8601
                    String dateTimeFormatted = dateTimeNow.toString("dd-MM-yyyy HH:mm:ss");
                    // –§–æ—Ä–º—É–≤–∞–Ω–Ω—è —Ä—è–¥–∫–∞ –∑ –¥–∞—Ç–∏ —Ç–∞ —á–∞—Å—É –≤ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ

                    String url = "https://www.google.com/maps/?q=" + latitude + "," + longitude + "&z=15";
                    //—Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –≥—É–≥–ª –∫–∞—Ä—Ç—É –∑ –¥–æ–≤–≥–æ—Ç–∏ —ñ —à–∏—Ä–æ—Ç–∏

                    text = "–õ–æ–∫–∞—Ü—ñ—é –æ—Ç—Ä–∏–º–∞–Ω–æ \n" + url + "\n–î–∞—Ç–∞ —Ç–∞ —á–∞—Å: " + dateTimeFormatted;//—Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –≤–∏–≤–æ–¥—É
                    text = text + "\n–í–∏–±–µ—Ä—ñ—Ç—å –ø—É–Ω–∫—Ç –∑ –Ω–∞—è–≤–Ω–∏—Ö";

                    if (checkReplacement == false) {
                        sendMessage.enableMarkdown(true);//–∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é(–ó–º—ñ–Ω–∞ –ø—Ä—ñ–∑–≤–∏—â–∞,–í–∫–∞–∑–∞—Ç–∏ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å)
                        ReplyKeyboardMarkup keyboardMarkup = replyKeyboardMarkupOll.getMenuKeyboardMenu();
                        sendMessage.setReplyMarkup(keyboardMarkup);
                    }else {
                        sendMessage.enableMarkdown(true);//–∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é(–í–∫–∞–∑–∞—Ç–∏ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å)
                        ReplyKeyboardMarkup keyboardMarkup = replyKeyboardMarkupOll.getMenuKeyboardMenu2();
                        sendMessage.setReplyMarkup(keyboardMarkup);
                    }


                    sendMessage.setText(text);//–≤—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                }
                //}else if (checkNumber == true) {
                else if (checkNumber == true) {//–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É

                    checkNumber = false;
                    text = "–ù–æ–º–µ—Ä –æ—Ç—Ä–∏–º–∞–Ω–æ " + contact.getPhoneNumber();
                    text = text + "\n–í–∏–±–µ—Ä—ñ—Ç—å –ø—É–Ω–∫—Ç –∑ –Ω–∞—è–≤–Ω–∏—Ö";

                    sendMessage.setText(text);

                    sendMessage.enableMarkdown(true);//–∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é(–ó–º—ñ–Ω–∞ –ø—Ä—ñ–∑–≤–∏—â–∞,–í–∫–∞–∑–∞—Ç–∏ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å)
                    ReplyKeyboardMarkup keyboardMarkup = replyKeyboardMarkupOll.getMenuKeyboardMenu();
                    sendMessage.setReplyMarkup(keyboardMarkup);
                    sendMessage.setText(text);
                    //–µ–ª—Å–µ —Å–æ—É—Ç(–ø–æ–º–∏–ª–∫–∞ –Ω–æ–º–µ—Ä—É)
                } else if (update.getMessage().getText().equals("/start")) {
                    text = "–ü—Ä–∏–≤—ñ—Ç, —è –±–æ—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –Ω–∞ –ù–¢–ü \n–£–≤–µ–¥–∏ —Å–≤–æ—î –ø—Ä—ñ–∑–≤–∏—â–µ —Ç–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª–∏ (–ê–±—Ä–∞–º–æ–≤ –Ü.–û.)";
                    checkSurname = true;//–ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–æ—Ç—Ä—ñ–±–Ω–∞ —â–æ–± –Ω–∞—Å—Ç—É–ø–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Å–ø—Ä–∏–π–º–∞–ª–æ—Å—å —è–∫ –ø—Ä—ñ–∑–≤–∏—â–µ.

                    sendMessage.setText(text);

                } else {

                    if (update.getMessage().getText().equals("–ó–º—ñ–Ω–∏—Ç–∏ –ø—Ä—ñ–∑–≤–∏—â–µ")) {
                        if (checkReplacement == false) {
                            text = "–í–≤–µ–¥–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–µ –ø—Ä—ñ–∑–≤–∏—â–µ";
                            checkSurname = true;
                            checkReplacement=true;
                            sendMessage.setText(text);
                        }else {
                            text = "–¢–∏ –≤–∂–µ –º—ñ–Ω—è–≤ –ø—Ä—ñ–∑–≤–∏—â–µ";
                            sendMessage.enableMarkdown(true);//–∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é(–í–∫–∞–∑–∞—Ç–∏ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å)
                            ReplyKeyboardMarkup keyboardMarkup = replyKeyboardMarkupOll.getMenuKeyboardMenu2();
                            sendMessage.setReplyMarkup(keyboardMarkup);
                            sendMessage.setText(text);

                        }


                    } else if (update.getMessage().getText().equals("–í–∫–∞–∑–∞—Ç–∏ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å")) {
                        text = "–í–∏–±–µ—Ä—ñ—Ç—å –ø—É–Ω–∫—Ç –∑ –Ω–∞—è–≤–Ω–∏—Ö";
                        //–∫–Ω–æ–ø–∫–∏ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ(–Ω–∞—è–≤–Ω–∏–π, –∑–∞ –º–µ–∂–∞–º–∏, –≤—ñ–¥–ø—É—Å—Ç–∫–∞, –∑–≤—ñ–ª—å–Ω–µ–Ω–Ω—è)
                        sendMessage.enableMarkdown(true);//–∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é(–ó–º—ñ–Ω–∞ –ø—Ä—ñ–∑–≤–∏—â–∞,–í–∫–∞–∑–∞—Ç–∏ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å)
                        ReplyKeyboardMarkup keyboardMarkup = replyKeyboardMarkupOll.getMenuKeyboardPresence();
                        sendMessage.setReplyMarkup(keyboardMarkup);
                        sendMessage.setText(text);
                    } else if (update.getMessage().getText().equals("–ù–∞—è–≤–Ω–∏–π")) {
                        text = "–î–∞–π –¥–æ—Å—Ç—É–ø –¥–æ –ª–æ–∫–∞—Ü—ñ—ó";

                            sendMessage.enableMarkdown(true);//–∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é(–ó–º—ñ–Ω–∞ –ø—Ä—ñ–∑–≤–∏—â–∞,–í–∫–∞–∑–∞—Ç–∏ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å)
                            ReplyKeyboardMarkup keyboardMarkup = replyKeyboardMarkupOll.getMenuKeyboardLocation();
                            sendMessage.setReplyMarkup(keyboardMarkup);
                            sendMessage.setText(text);


                    } else if (update.getMessage().getText().equals("–ó–∞ –º–µ–∂–∞–º–∏")) {
                        text = "–î–∞–π –¥–æ—Å—Ç—É–ø –¥–æ –ª–æ–∫–∞—Ü—ñ—ó";

                        sendMessage.enableMarkdown(true);//–∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é(–ó–º—ñ–Ω–∞ –ø—Ä—ñ–∑–≤–∏—â–∞,–í–∫–∞–∑–∞—Ç–∏ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å)
                        ReplyKeyboardMarkup keyboardMarkup = replyKeyboardMarkupOll.getMenuKeyboardLocation();
                        sendMessage.setReplyMarkup(keyboardMarkup);
                        sendMessage.setText(text);


                    } else if (update.getMessage().getText().equals("–í—ñ–¥–ø—É—Å—Ç–∫–∞")) {
                        text = "–î–∞–π –¥–æ—Å—Ç—É–ø –¥–æ –ª–æ–∫–∞—Ü—ñ—ó";
                        //if (—î –≤ –±–¥){
                        //–æ–Ω–æ–≤–∏—Ç–∏ –¥–∞–Ω—ñ (–Ω–∞—è–≤–Ω–æ—Å—Ç—ñ,–ª–æ–∫–∞—Ü—ñ—è,–¥–∞—Ç–∞,—á–∞—Å)
                        // text="\n–î–∞–Ω—ñ –æ–Ω–æ–≤–ª–µ–Ω–æ"+text;

                        // }else {
                        // –≤–≤–µ—Å—Ç–∏ –¥–∞–Ω—ñ
                        //text="\n–î–∞–Ω—ñ –¥–æ–¥–∞–Ω–æ"+text;
                        // }
                        sendMessage.enableMarkdown(true);//–∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é(–ó–º—ñ–Ω–∞ –ø—Ä—ñ–∑–≤–∏—â–∞,–í–∫–∞–∑–∞—Ç–∏ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å)
                        ReplyKeyboardMarkup keyboardMarkup = replyKeyboardMarkupOll.getMenuKeyboardLocation();
                        sendMessage.setReplyMarkup(keyboardMarkup);
                        sendMessage.setText(text);

                    } else if (update.getMessage().getText().equals("–ó–≤—ñ–ª—å–Ω–µ–Ω–Ω—è")) {
                        text = "–î–∞–π –¥–æ—Å—Ç—É–ø –¥–æ –ª–æ–∫–∞—Ü—ñ—ó";

                        sendMessage.enableMarkdown(true);//–∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é(–ó–º—ñ–Ω–∞ –ø—Ä—ñ–∑–≤–∏—â–∞,–í–∫–∞–∑–∞—Ç–∏ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å)
                        ReplyKeyboardMarkup keyboardMarkup = replyKeyboardMarkupOll.getMenuKeyboardLocation();
                        sendMessage.setReplyMarkup(keyboardMarkup);
                        sendMessage.setText(text);

                    } else if (message.hasText()) {
                        if (checkSurname == true) {
                            checkSurname = false;

                            if (checkReplacement==false){

                                text = "–ü—Ä—ñ–∑–≤–∏—â–µ –æ—Ç—Ä–∏–º–∞–Ω–æ";
                                text = text + "\n–ù–∞–¥–∞–π—Ç–µ –¥–æ—Å—Ç—É–ø –¥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É";

                                sendMessage.enableMarkdown(true);//–∫–Ω–æ–ø–∫–∏ –∑ –∫–æ–Ω—Ç–∞–∫—Ç–æ–º(–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—å –∫–æ–Ω—Ç–∞–∫—Ç–æ–º)
                                ReplyKeyboardMarkup keyboardMarkup = replyKeyboardMarkupOll.getMenuKeyboardPhone();
                                sendMessage.setReplyMarkup(keyboardMarkup);

                                sendMessage.setText(text);
                                checkNumber = true;
                            }else {
                                text = "–ü—Ä—ñ–∑–≤–∏—â–µ –æ–Ω–æ–≤–ª–µ–Ω–æ";
                                text = text + "\n–í–∏–±–µ—Ä—ñ—Ç—å –ø—É–Ω–∫—Ç –∑ –Ω–∞—è–≤–Ω–∏—Ö";
                                sendMessage.enableMarkdown(true);//–∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é(–í–∫–∞–∑–∞—Ç–∏ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å)
                                ReplyKeyboardMarkup keyboardMarkup = replyKeyboardMarkupOll.getMenuKeyboardMenu2();
                                sendMessage.setReplyMarkup(keyboardMarkup);
                                sendMessage.setText(text);
                            }
                        }else sendMessage.setText("—è –Ω–µ —Ä–æ–∑—É–º—ñ—é");

                    }
                }
            }
        try {
            execute(sendMessage);//—Ä–µ—Ç—É—Ä–Ω–∏—Ç—å –º–µ—Ç–æ–¥ —ñ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        } catch (TelegramApiException e) {
            throw new RuntimeException(e);
        }
    }}



